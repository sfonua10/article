{"version":3,"file":"static/webpack/static/development/pages/post.js.72235c6d4babbce3bca8.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Component } from \"react\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: props.article\n    };\n  }\n  render() {\n    console.log(this.state.article.images[0].mainUrl);\n    return (\n      <React.Fragment>\n        <Head>\n          <meta charset=\"utf-8\" />\n          <link rel=\"stylesheet\" href=\"/static/test.css\" />\n        </Head>\n        <Layout>\n          <div className=\"container\">\n            <h1>{this.state.article.title}</h1>\n            <div className=\"wrapper\">\n              <section className=\"main\">\n                <img src={`http://${this.state.article.images[0].mainUrl}`} />\n                <h2>Flexbox Layout</h2>\n\n                <p>\n                  Starting from the outside and working in, adding display:\n                  flex; to the container is the first step in any flexbox\n                  layout. The flex-direction is column, so this will position\n                  all sections under each other.{\" \"}\n                </p>\n\n                <p>\n                  One handy thing is how easy it is to align text. In the\n                  navigation, with align-items: baseline, all navigation items\n                  are aligned to the baseline of the text so they look more\n                  uniform.{\" \"}\n                </p>\n              </section>\n            </div>\n          </div>\n\n          {/* <p>{props.show.summary.replace(/<[/]?p>/g, \"\")}</p> */}\n          {/* <img src={`http://${this.state.article.images[0].mainUrl}`} /> */}\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(\n    `https://interview-project-17987.herokuapp.com/api/article/article-${id}`\n  );\n  const article = await res.json();\n\n  console.log(`Fetched show: ${article.url}`);\n\n  return { article };\n};\n\nexport default Post;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAyBA;;;;AA7CA;AACA;AA+CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAKA;AAEA;AAPA;AASA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}