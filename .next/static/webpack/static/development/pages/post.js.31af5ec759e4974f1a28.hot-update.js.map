{"version":3,"file":"static/webpack/static/development/pages/post.js.31af5ec759e4974f1a28.hot-update.js","sources":["webpack:///./pages/post.js"],"sourcesContent":["import Layout from \"../components/MyLayout\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Component } from \"react\";\nimport Image from \"../components/Image\";\nimport Video from \"../components/Video\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: props.article\n    };\n  }\n  render() {\n    console.log(this.state.article);\n    return (\n      <React.Fragment>\n        <Head>\n          <meta charset=\"utf-8\" />\n          <link rel=\"stylesheet\" href=\"/static/post.css\" />\n        </Head>\n        <Layout>\n          <h1> {this.state.article.title} </h1>\n          <Image\n            key={this.state.article.url}\n            images={this.state.article.images}\n          />\n          <div className=\"content-container\">\n            <div class=\"spacer\" />\n\n            <Video video={this.state.article.video} />\n\n            {this.state.article.content.map(text => (\n              <React.Fragment>\n                <h4>{text.subtitle}</h4>\n                <p>{text.text}</p>\n              </React.Fragment>\n            ))}\n          </div>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n{\n  /* <h3 style={{display: !props.question && \"none\"}}>Question: {props.question}</h3> */\n}\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(\n    `https://interview-project-17987.herokuapp.com/api/article/article-${id}`\n  );\n  const article = await res.json();\n\n  console.log(`Fetched show: ${article.url}`);\n\n  return {\n    article\n  };\n};\n\nexport default Post;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAUA;;;;AApCA;AACA;AAqCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAKA;AAEA;AAPA;AAUA;AADA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}